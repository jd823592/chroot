#!/bin/bash

SCRIPT=$(readlink -f "$0")
CHROOT_PATH=$(dirname "$SCRIPT")
CHROOT_DIR="$CHROOT_PATH"/$(basename "$SCRIPT")-dir
USER=$(logname)

# mount proc, sys, dev
mount -t proc proc "$CHROOT_DIR"/proc
mount --rbind /sys "$CHROOT_DIR"/sys
mount --rbind /dev "$CHROOT_DIR"/dev
mount --make-rslave "$CHROOT_DIR"/sys
mount --make-rslave "$CHROOT_DIR"/dev

# auxiliary

function silent {
    $@ >/dev/null 2>&1
}

function in_chroot {
    chroot "$CHROOT_DIR" "$@"
}

function as_user_in_chroot {
    in_chroot su - -c "$@" "$USER"
}

function as_user_in_chroot_dir {
    as_user_in_chroot "cd $1 && ${@:2}"
}

function user_exists {
    silent in_chroot id -u "$USER"
}

function user_add {
    silent in_chroot useradd -m -G wheel "$USER"
}

function init_env {
    in_chroot emerge-webrsync
    in_chroot layman -S
    in_chroot eix-sync

    as_user_in_chroot "cabal update"

    as_user_in_chroot "mkdir bacon"

    # download bleeding edge dependencies where hackage is outdated
    as_user_in_chroot_dir "bacon" "hg clone https://bitbucket.org/iago/z3-haskell"

    # download bacon
    as_user_in_chroot_dir "bacon" "git clone https://github.com/d3sformal/bacon-core"
    as_user_in_chroot_dir "bacon" "git clone https://github.com/d3sformal/bacon-doc"
    as_user_in_chroot_dir "bacon" "git clone https://github.com/d3sformal/bacon-gui"
    as_user_in_chroot_dir "bacon" "git clone https://github.com/d3sformal/bacon-main"
    as_user_in_chroot_dir "bacon" "git clone https://github.com/d3sformal/bacon-preprocessor"

    as_user_in_chroot_dir "bacon/bacon-core" "cabal sandbox init"
    as_user_in_chroot_dir "bacon/bacon-core" "cabal sandbox add-source ../z3-haskell"

    as_user_in_chroot_dir "bacon/bacon-gui" "cabal sandbox init"
    as_user_in_chroot_dir "bacon/bacon-gui" "cabal sandbox add-source ../z3-haskell"
    as_user_in_chroot_dir "bacon/bacon-gui" "cabal sandbox add-source ../bacon-core"

    as_user_in_chroot_dir "bacon/bacon-main" "cabal sandbox init"
    as_user_in_chroot_dir "bacon/bacon-main" "cabal sandbox add-source ../z3-haskell"
    as_user_in_chroot_dir "bacon/bacon-main" "cabal sandbox add-source ../bacon-core"
    as_user_in_chroot_dir "bacon/bacon-main" "cabal sandbox add-source ../bacon-gui"

    # build bacon
    as_user_in_chroot_dir "bacon/bacon-main" "cabal install --reinstall"

    # build preprocessor
    as_user_in_chroot_dir "bacon/bacon-preprocessor" "make"
}

# enable networking, X
cp -L "/etc/resolv.conf"        "$CHROOT_DIR/etc/resolv.conf"
cp    "/home/$USER/.Xauthority" "$CHROOT_DIR/home/$USER/.Xauthority"

# init user
if ! user_exists; then
    user_add
    init_env
fi

# chroot
chroot "$CHROOT_DIR" su - "$USER"

# umount proc, sys, dev
MOUNTS=$(mount -l | cut -d" " -f3 | grep "^$(readlink -f $CHROOT_DIR)" | sort -ur)

echo "umount:"
sed 's/^/    /' <<END
$MOUNTS
END

umount $MOUNTS
